{{- range $service := list "userService" "roomService" "reservationService" }}
{{- $serviceValues := index $.Values $service }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $serviceValues.name }}
  namespace: {{ $.Values.global.namespace }}
spec:
  replicas: {{ $serviceValues.replicas }}
  selector:
    matchLabels:
      app: {{ $serviceValues.name }}
  template:
    metadata:
      labels:
        app: {{ $serviceValues.name }}
    spec:
      containers:
      - name: {{ $serviceValues.name }}
        image: {{ $serviceValues.image.repository }}:{{ $serviceValues.image.tag }}
        imagePullPolicy: {{ $serviceValues.image.pullPolicy }}
        ports:
        - containerPort: {{ $serviceValues.port }}
        env:
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: jwt-secret-key
        - name: SECRET_KEY
          value: {{ $serviceValues.env.secretKey }}
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: {{ $serviceValues.env.kafkaBootstrapServers }}
        {{- if eq $service "userService" }}
        - name: DATABASE_URL
          value: postgresql://postgres:$(USER_DB_PASSWORD)@{{ $.Values.databases.userDb.name }}:{{ $.Values.databases.userDb.port }}/users_db
        - name: KAFKA_USERS_TOPIC
          value: {{ $serviceValues.env.kafkaUsersTopic }}
        - name: USER_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: user-db-password
        {{- else if eq $service "roomService" }}
        - name: DATABASE_URL
          value: postgresql://postgres:$(ROOM_DB_PASSWORD)@{{ $.Values.databases.roomDb.name }}:{{ $.Values.databases.roomDb.port }}/rooms_db
        - name: KAFKA_ROOMS_TOPIC
          value: {{ $serviceValues.env.kafkaRoomsTopic }}
        - name: ROOM_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: room-db-password
        {{- else if eq $service "reservationService" }}
        - name: DATABASE_URL
          value: postgresql://postgres:$(RESERVATION_DB_PASSWORD)@{{ $.Values.databases.reservationDb.name }}:{{ $.Values.databases.reservationDb.port }}/reservations_db
        - name: KAFKA_RESERVATIONS_TOPIC
          value: {{ $serviceValues.env.kafkaReservationsTopic }}
        - name: USER_SERVICE_URL
          value: {{ $serviceValues.env.userServiceUrl }}
        - name: ROOM_SERVICE_URL
          value: {{ $serviceValues.env.roomServiceUrl }}
        - name: RESERVATION_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: reservation-db-password
        {{- end }}
        resources:
          limits:
            cpu: {{ $serviceValues.resources.limits.cpu }}
            memory: {{ $serviceValues.resources.limits.memory }}
          requests:
            cpu: {{ $serviceValues.resources.requests.cpu }}
            memory: {{ $serviceValues.resources.requests.memory }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ $serviceValues.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: {{ $serviceValues.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $serviceValues.name }}
  namespace: {{ $.Values.global.namespace }}
spec:
  selector:
    app: {{ $serviceValues.name }}
  ports:
  - port: {{ $serviceValues.port }}
    targetPort: {{ $serviceValues.port }}
  type: ClusterIP
{{- end }}